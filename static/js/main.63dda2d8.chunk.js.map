{"version":3,"sources":["primary_logo.svg","Icon/index.js","EditTractOwnership/npriitem.js","EditTractOwnership/mineralinterestitem.js","EditTractOwnership/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","library","add","faLevelUpAlt","faMinusCircle","faPlus","faSmile","Icon","iconProps","icon","rotation","getIconProps","NPRIItem","addNPRI","removeNPRI","npri","tract","status","onCancelClick","useState","npriInterestFieldVal","setNpriInterestFieldVal","npriOwnerFieldVal","setNpriOwnerFieldVal","Row","data-testid","id","Col","xs","Form","Control","placeholder","owner","name","value","onChange","e","target","className","InputGroup","interest","Append","Text","Button","onClick","key","md","span","offset","variant","uuidv4","MineralInterestItem","addMI","removeMI","ownerFieldVal","setOwnerFieldVal","interestFieldVal","setInterestFieldVal","leaseFieldVal","setLeaseFieldVal","isAddNewNPRIShowing","setIsAddNewNPRIShowing","Group","lease","npris","length","map","Card","Header","Body","EditTractOwnership","isAddNewMineralInterestShowing","setIsAddNewMineralInterestShowing","setPageKey","tracts","setTracts","useEffect","filter","item","tractsCopy","push","tractId","newNpris","Object","assign","values","pop","size","block","tractOwnerships","App","Navbar","bg","Brand","width","src","Logo","alt","Toggle","Collapse","Nav","Item","Link","href","Container","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.63dda2d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/primary_logo.13cf3168.svg\";","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faLevelUpAlt,\n  faMinusCircle,\n  faPlus,\n  faSmile,\n} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faLevelUpAlt, faMinusCircle, faPlus, faSmile);\n\nconst getIconProps = icon => {\n  switch (icon) {\n    case 'add':\n      return {\n        icon: 'plus',\n      };\n    case 'indent':\n      return {\n        icon: 'level-up-alt',\n        rotation: 90,\n      };\n    case 'remove':\n      return {\n        icon: 'minus-circle',\n      };\n    case 'smile':\n      return {\n        icon: 'smile',\n      };\n    default:\n      return {};\n  }\n};\n\nconst Icon = ({ icon }) => {\n  const iconProps = getIconProps(icon);\n\n  return <FontAwesomeIcon {...iconProps} />;\n};\n\nexport default Icon;\n","import React, { useState, Fragment } from 'react';\nimport uuidv4 from 'uuid/v4';\nimport Icon from '../Icon';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nconst NPRIItem = ({\n  addNPRI,\n  removeNPRI,\n  npri,\n  tract,\n  status,\n  onCancelClick,\n}) => {\n  const [npriInterestFieldVal, setNpriInterestFieldVal] = useState('');\n  const [npriOwnerFieldVal, setNpriOwnerFieldVal] = useState('');\n\n  return (\n    <Fragment>\n      <Row data-testid={npri ? `npri-${npri.id}` : 'npriRowAdd'}>\n        <Col>\n          <Row>\n            <Col xs={3}>\n              <Icon icon=\"indent\" />\n            </Col>\n            <Col xs={9}>\n              <Form.Control\n                placeholder={npri && npri.owner ? npri.owner : 'npri owner'}\n                name=\"npri-owner\"\n                value={npriOwnerFieldVal}\n                onChange={e => setNpriOwnerFieldVal(e.target.value)}\n                className=\"npri-owner\"\n                data-testid={npri && npri.owner ? `npri-${npri.id}.owner` : ''}\n              />\n            </Col>\n          </Row>\n        </Col>\n        <Col>&nbsp;</Col>\n        <Col>\n          <InputGroup>\n            <Form.Control\n              placeholder={\n                npri && npri.interest ? npri.interest : 'npri interest'\n              }\n              name=\"npri-interest\"\n              value={npriInterestFieldVal}\n              onChange={e => setNpriInterestFieldVal(e.target.value)}\n              className=\"npri-interest\"\n              data-testid={\n                npri && npri.interest ? `npri-${npri.id}.interest` : ''\n              }\n            />\n            <InputGroup.Append>\n              <InputGroup.Text>%</InputGroup.Text>\n            </InputGroup.Append>\n          </InputGroup>\n        </Col>\n        <Col>&nbsp;</Col>\n        <Col>\n          {status === 'new' ? (\n            ' '\n          ) : (\n            <Button\n              data-testid={`npri-${npri.id}.remove`}\n              onClick={() => {\n                removeNPRI(tract.id, npri.id);\n              }}\n            >\n              <Icon icon=\"remove\" />\n            </Button>\n          )}\n        </Col>\n      </Row>\n\n      {status === 'new' ? (\n        <Row key={`npri${tract.id}`}>\n          <Col md={{ span: 1, offset: 9 }}>\n            <Button\n              variant=\"success\"\n              onClick={() => {\n                addNPRI(tract.id, {\n                  id: uuidv4(),\n                  owner: npriOwnerFieldVal,\n                  interest: npriInterestFieldVal,\n                });\n                setNpriOwnerFieldVal('');\n                setNpriInterestFieldVal('');\n              }}\n            >\n              Add\n            </Button>\n          </Col>\n          <Col>\n            <Button variant=\"danger\" onClick={onCancelClick}>\n              Cancel\n            </Button>\n          </Col>\n        </Row>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport default NPRIItem;\n","import React, { useState, Fragment } from 'react';\nimport uuidv4 from 'uuid/v4';\nimport Icon from '../Icon';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Card from 'react-bootstrap/Card';\n\nimport NPRIItem from './npriitem';\n\nconst MineralInterestItem = ({\n  tract,\n  status,\n  addMI,\n  removeMI,\n  addNPRI,\n  removeNPRI,\n  onCancelClick,\n}) => {\n  const [ownerFieldVal, setOwnerFieldVal] = useState('');\n  const [interestFieldVal, setInterestFieldVal] = useState('');\n  const [leaseFieldVal, setLeaseFieldVal] = useState('');\n\n  const [isAddNewNPRIShowing, setIsAddNewNPRIShowing] = useState(false);\n\n  return (\n    <div className=\"mineral-interests-wrapper\">\n      <Row\n        className=\"mineral-interest-item\"\n        data-testid={\n          tract ? `mineralInterest-${tract.id}` : 'mineralInterestRowAdd'\n        }\n      >\n        <Col>\n          <Form.Group>\n            <Form.Control\n              placeholder={tract && tract.owner ? tract.owner : 'owner'}\n              name=\"owner\"\n              value={tract && tract.owner ? tract.owner : ownerFieldVal}\n              onChange={e => setOwnerFieldVal(e.target.value)}\n              className=\"mineral-interest-owner\"\n              data-testid={\n                tract && tract.id ? `mineralInterest-${tract.id}.owner` : null\n              }\n            />\n          </Form.Group>\n        </Col>\n        <Col>\n          <Form.Group>\n            <InputGroup>\n              <Form.Control\n                placeholder={\n                  tract && tract.interest ? tract.interest : 'interest'\n                }\n                name=\"interest\"\n                value={interestFieldVal}\n                onChange={e => setInterestFieldVal(e.target.value)}\n                className=\"mineral-interest-interest\"\n                data-testid={\n                  tract && tract.id\n                    ? `mineralInterest-${tract.id}.interest`\n                    : null\n                }\n              />\n              <InputGroup.Append>\n                <InputGroup.Text>%</InputGroup.Text>\n              </InputGroup.Append>\n            </InputGroup>\n          </Form.Group>\n        </Col>\n        <Col>&nbsp;</Col>\n        <Col>\n          <Form.Group>\n            <Form.Control\n              placeholder={tract && tract.lease ? tract.lease : 'lease'}\n              name=\"lease\"\n              value={leaseFieldVal}\n              onChange={e => setLeaseFieldVal(e.target.value)}\n              className=\"mineral-interest-lease\"\n              data-testid={\n                tract && tract.id ? `mineralInterest-${tract.id}.lease` : null\n              }\n            />\n          </Form.Group>\n        </Col>\n        <Col>\n          <Col>\n            {status === 'new' ? (\n              ' '\n            ) : (\n              <Button\n                data-testid={`mineralInterest-${tract.id}.remove`}\n                onClick={() => {\n                  removeMI(tract.id);\n                }}\n              >\n                <Icon icon=\"remove\" />\n              </Button>\n            )}\n          </Col>\n        </Col>\n      </Row>\n\n      {tract && tract.npris && tract.npris.length > 0\n        ? tract.npris.map(npri => (\n            <NPRIItem\n              addNPRI={addNPRI}\n              removeNPRI={removeNPRI}\n              npri={npri}\n              tract={tract}\n              key={npri.id}\n            />\n          ))\n        : null}\n\n      {status === 'new' ? (\n        <Row>\n          <Col md={{ span: 1, offset: 9 }}>\n            <Button\n              variant=\"success\"\n              onClick={() => {\n                addMI(\n                  uuidv4(),\n                  ownerFieldVal,\n                  interestFieldVal,\n                  leaseFieldVal,\n                  []\n                );\n                setOwnerFieldVal('');\n                setInterestFieldVal('');\n                setLeaseFieldVal('');\n              }}\n            >\n              Add\n            </Button>\n          </Col>\n          <Col>\n            <Button variant=\"danger\" onClick={() => onCancelClick()}>\n              Cancel\n            </Button>\n          </Col>\n        </Row>\n      ) : (\n        <Fragment>\n          {isAddNewNPRIShowing ? (\n            <Card>\n              <Card.Header>Add New NPRI</Card.Header>\n              <Card.Body>\n                <NPRIItem\n                  status=\"new\"\n                  onCancelClick={() => setIsAddNewNPRIShowing(false)}\n                  tract={tract}\n                  addNPRI={addNPRI}\n                  removeNPRI={removeNPRI}\n                />\n              </Card.Body>\n            </Card>\n          ) : (\n            <Button\n              className=\"add-npri-button\"\n              onClick={() => setIsAddNewNPRIShowing(true)}\n            >\n              Add NPRI to {tract.owner}\n            </Button>\n          )}\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default MineralInterestItem;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport uuidv4 from 'uuid/v4';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport MineralInterestItem from './mineralinterestitem.js';\n\nconst EditTractOwnership = ({ value = [], onChange = () => {} }) => {\n  const [\n    isAddNewMineralInterestShowing,\n    setIsAddNewMineralInterestShowing,\n  ] = useState(false);\n\n  const [pageKey, setPageKey] = useState(uuidv4());\n\n  const [tracts, setTracts] = useState(value);\n\n  useEffect(() => {\n    onChange(tracts);\n  });\n\n  const addMI = (id, owner, interest, lease, npris) => {\n    setTracts([...tracts, ...[{ id, owner, interest, lease, npris }]]);\n  };\n\n  const removeMI = id => {\n    setTracts(tracts.filter(item => item.id !== id));\n  };\n\n  const addNPRI = (id, npris) => {\n    setPageKey(uuidv4());\n    let tractsCopy = tracts;\n\n    tractsCopy.filter(item => item.id === id)[0].npris.push(npris);\n\n    setTracts(...[tractsCopy]);\n  };\n\n  const removeNPRI = tractId => {\n    setPageKey(uuidv4());\n    let newNpris = Object.assign({}, tracts);\n    newNpris = Object.values(newNpris)\n      .filter(item => item.id === tractId)[0]\n      .npris.pop();\n    let tractsCopy = tracts;\n    setTracts(tractsCopy);\n  };\n\n  return (\n    <Fragment>\n      <Row>\n        <Col>Owner</Col>\n        <Col>Mineral Interest</Col>\n        <Col>NPRI</Col>\n        <Col>Lease</Col>\n        <Col>&nbsp;</Col>\n      </Row>\n\n      {tracts.length > 0 ? (\n        tracts.map(tract => (\n          <Fragment key={tract.id}>\n            <MineralInterestItem\n              tract={tract}\n              onChange={onChange}\n              addMI={addMI}\n              removeMI={removeMI}\n              addNPRI={addNPRI}\n              removeNPRI={removeNPRI}\n            />\n          </Fragment>\n        ))\n      ) : (\n        <Row>\n          <p>No listings.</p>\n        </Row>\n      )}\n\n      {isAddNewMineralInterestShowing ? (\n        <Card>\n          <Card.Header>Add New Mineral Interest</Card.Header>\n          <Card.Body>\n            <MineralInterestItem\n              status=\"new\"\n              onChange={onChange}\n              addMI={addMI}\n              removeMI={removeMI}\n              addNPRI={addNPRI}\n              removeNPRI={removeNPRI}\n              onCancelClick={() => setIsAddNewMineralInterestShowing(false)}\n            />\n          </Card.Body>\n        </Card>\n      ) : (\n        <Button\n          size=\"lg\"\n          block\n          className=\"add-mi-button\"\n          onClick={() => setIsAddNewMineralInterestShowing(true)}\n        >\n          Add Mineral Interest\n        </Button>\n      )}\n    </Fragment>\n  );\n};\n\nexport default EditTractOwnership;\n","import React, { Fragment } from 'react';\nimport uuidv4 from 'uuid/v4';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nimport './App.css';\nimport Logo from './primary_logo.svg';\n\nimport EditTractOwnership from './EditTractOwnership';\n\nconst tractOwnerships = [\n  {\n    id: uuidv4(),\n    owner: 'Luke Skywalker',\n    interest: 0.5,\n    lease: 'Tatooine Lease',\n    npris: [\n      {\n        id: uuidv4(),\n        owner: 'Leia Organa',\n        interest: 0.45,\n      },\n      {\n        id: uuidv4(),\n        owner: 'Han Solo',\n        interest: 0.15,\n      },\n    ],\n  },\n];\n\nfunction App() {\n  return (\n    <Fragment>\n      <Navbar bg=\"light\" variant=\"light\">\n        <Navbar.Brand>\n          <img width=\"150\" src={Logo} alt=\"Landdox\" />\n        </Navbar.Brand>\n        <Navbar.Toggle />\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Nav>\n            <Nav.Item>\n              <Nav.Link\n                href=\"https://stackoverflow.com/users/story/4483968\"\n                target=\"_blank\"\n              >\n                StackOverflow\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link href=\"https://github.com/violetcrumble\" target=\"_blank\">\n                GitHub\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                href=\"https://www.linkedin.com/in/bonniemellott/\"\n                target=\"_blank\"\n              >\n                LinkedIn\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Container>\n        <Row>\n          <Col>\n            <EditTractOwnership value={tractOwnerships} />\n          </Col>\n        </Row>\n      </Container>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}